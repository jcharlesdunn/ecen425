; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
L_myinth_1:
	DB	"Reset Inerrupt",0xD,0xA,0
	ALIGN	2
resetInterrupt:
	; >>>>> Line:	9
	; >>>>> void resetInterrupt(void) { 
	jmp	L_myinth_2
L_myinth_3:
	; >>>>> Line:	10
	; >>>>> printString("Reset Inerrupt\r\n"); 
	mov	ax, L_myinth_1
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	11
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_myinth_2:
	push	bp
	mov	bp, sp
	jmp	L_myinth_3
	ALIGN	2
tickInterrupt:
	; >>>>> Line:	14
	; >>>>> void tickInterrupt(void) { 
	jmp	L_myinth_5
L_myinth_6:
	; >>>>> Line:	16
	; >>>>> } 
	mov	sp, bp
	pop	bp
	ret
L_myinth_5:
	push	bp
	mov	bp, sp
	jmp	L_myinth_6
	ALIGN	2
keyboardInterrupt:
	; >>>>> Line:	19
	; >>>>> void keyboardInterrupt(void) { 
	jmp	L_myinth_8
L_myinth_9:
	; >>>>> Line:	21
	; >>>>> c = KeyBuffer; 
	mov	al, byte [KeyBuffer]
	mov	byte [bp-1], al
	mov	sp, bp
	pop	bp
	ret
L_myinth_8:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_myinth_9
